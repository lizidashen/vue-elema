{"version":3,"sources":["../../vue-elema/prod.server.js"],"names":["express","require","config","port","process","env","PORT","build","app","router","Router","get","req","res","next","url","use","appData","seller","goods","ratings","apiRoutes","json","errno","data","static","module","exports","listen","err","console","log"],"mappings":";;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,SAASD,QAAQ,gBAAR,CAAb;;AAEA,IAAIE,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBJ,OAAOK,KAAP,CAAaJ,IAA5C,C,CAAkD;;AAElD,IAAIK,MAAMR,SAAV,C,CAAoB;;AAEpB,IAAIS,SAAST,QAAQU,MAAR,EAAb;;AAEA;AACAD,OAAOE,GAAP,CAAW,GAAX,EAAgB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACxCF,MAAIG,GAAJ,GAAU,aAAV;AACAD;AACD,CAHD;AAIA;AACAN,IAAIQ,GAAJ,CAAQP,MAAR;;AAEA;AACA,IAAIQ,UAAUhB,QAAQ,aAAR,CAAd;AACA,IAAIiB,SAASD,QAAQC,MAArB;AACA,IAAIC,QAAQF,QAAQE,KAApB;AACA,IAAIC,UAAUH,QAAQG,OAAtB;AACA;AACA,IAAIC,YAAYrB,QAAQU,MAAR,EAAhB;AACA;AACAW,UAAUV,GAAV,CAAc,SAAd,EAAyB,UAASC,GAAT,EAAaC,GAAb,EAAiB;AACxCA,MAAIS,IAAJ,CAAS;AACPC,WAAO,CADA;AAEPC,UAAMN;AAFC,GAAT;AAID,CALD;AAMAG,UAAUV,GAAV,CAAc,QAAd,EAAwB,UAASC,GAAT,EAAaC,GAAb,EAAiB;AACvCA,MAAIS,IAAJ,CAAS;AACPC,WAAO,CADA;AAEPC,UAAML;AAFC,GAAT;AAID,CALD;AAMAE,UAAUV,GAAV,CAAc,SAAd,EAAyB,UAAUC,GAAV,EAAcC,GAAd,EAAmB;AAC1CA,MAAIS,IAAJ,CAAS;AACPC,WAAO,CADA;AAEPC,UAAMJ;AAFC,GAAT;AAID,CALD;AAMA;AACAZ,IAAIQ,GAAJ,CAAQ,MAAR,EAAgBK,SAAhB;;AAEA;AACAb,IAAIQ,GAAJ,CAAQhB,QAAQyB,MAAR,CAAe,QAAf,CAAR;;AAEA;AACAC,OAAOC,OAAP,GAAiBnB,IAAIoB,MAAJ,CAAWzB,IAAX,EAAiB,UAAU0B,GAAV,EAAe;AAC/C,MAAIA,GAAJ,EAAS;AACPC,YAAQC,GAAR,CAAYF,GAAZ;AACA;AACD;AACDC,UAAQC,GAAR,CAAY,mCAAmC5B,IAAnC,GAA0C,IAAtD;AACD,CANgB,CAAjB","file":"prod.server.js","sourcesContent":["var express = require('express');\nvar config = require('./config/index');\n\nvar port = process.env.PORT || config.build.port; // 当前环境下的port，或者config下的port，即端口\n\nvar app = express();// 启动express\n\nvar router = express.Router();\n\n// 定义一个路由，在根目录返回一个function\nrouter.get('/', function (req, res, next) {\n  req.url = '/index,html';\n  next();\n});\n// 使用router\napp.use(router);\n\n// 下面的是一些关于异步接口的router，之前定义过，从dev-server.js中复制过来，\nvar appData = require('./data.json');\nvar seller = appData.seller;\nvar goods = appData.goods;\nvar ratings = appData.ratings;\n// 创建express的路由功能，就可以根据需求创建多个路由，需要多少创建多少\nvar apiRoutes = express.Router();\n// 使用字符串的路径模式定义请求的端点，get（）是http请求的方法，res.json（）发送一个json格式的响应\napiRoutes.get('/seller', function(req,res){\n  res.json({\n    errno: 0,\n    data: seller\n  });\n});\napiRoutes.get('/goods', function(req,res){\n  res.json({\n    errno: 0,\n    data: goods\n  });\n});\napiRoutes.get('/rating', function (req,res) {\n  res.json({\n    errno: 0,\n    data: ratings\n  });\n});\n// api这里是做的字符串筛选，即所有包括api的字符串，第二个参数即相应的router路由\napp.use('/api', apiRoutes);\n\n// di定义static的目录\napp.use(express.static('./dist'));\n\n// 启动express\nmodule.exports = app.listen(port, function (err) {\n  if (err) {\n    console.log(err);\n    return;\n  }\n  console.log('Listening at http://localhost:' + port + '\\n');\n});\n"]}
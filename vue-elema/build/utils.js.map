{"version":3,"sources":["../../../vue-elema/build/utils.js"],"names":["path","require","config","ExtractTextPlugin","exports","assetsPath","_path","assetsSubDirectory","process","env","NODE_ENV","build","dev","posix","join","cssLoaders","options","cssLoader","loader","minimize","sourceMap","generateLoaders","loaderOptions","loaders","push","extract","use","fallback","concat","css","postcss","less","sass","indentedSyntax","scss","stylus","styl","styleLoaders","output","extension","test","RegExp"],"mappings":";;;;;;;;AAAA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,SAASD,QAAQ,WAAR,CAAb;AACA,IAAIE,oBAAoBF,QAAQ,6BAAR,CAAxB;;AAEAG,QAAQC,UAAR,GAAqB,UAAUC,KAAV,EAAiB;AACpC,MAAIC,qBAAqBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACrBR,OAAOS,KAAP,CAAaJ,kBADQ,GAErBL,OAAOU,GAAP,CAAWL,kBAFf;AAGA,SAAOP,KAAKa,KAAL,CAAWC,IAAX,CAAgBP,kBAAhB,EAAoCD,KAApC,CAAP;AACD,CALD;;AAOAF,QAAQW,UAAR,GAAqB,UAAUC,OAAV,EAAmB;AACtCA,YAAUA,WAAW,EAArB;;AAEA,MAAIC,YAAY;AACdC,YAAQ,YADM;AAEdF,aAAS;AACPG,gBAAUX,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAD5B;AAEPU,iBAAWJ,QAAQI;AAFZ;;AAMX;AARgB,GAAhB,CASA,SAASC,eAAT,CAA0BH,MAA1B,EAAkCI,aAAlC,EAAiD;AAC/C,QAAIC,UAAU,CAACN,SAAD,CAAd;AACA,QAAIC,MAAJ,EAAY;AACVK,cAAQC,IAAR,CAAa;AACXN,gBAAQA,SAAS,SADN;AAEXF,iBAAS,sBAAc,EAAd,EAAkBM,aAAlB,EAAiC;AACxCF,qBAAWJ,QAAQI;AADqB,SAAjC;AAFE,OAAb;AAMD;;AAED;AACA;AACA,QAAIJ,QAAQS,OAAZ,EAAqB;AACnB,aAAOtB,kBAAkBsB,OAAlB,CAA0B;AAC/BC,aAAKH,OAD0B;AAE/BI,kBAAU;AAFqB,OAA1B,CAAP;AAID,KALD,MAKO;AACL,aAAO,CAAC,kBAAD,EAAqBC,MAArB,CAA4BL,OAA5B,CAAP;AACD;AACF;;AAED;AACA,SAAO;AACLM,SAAKR,iBADA;AAELS,aAAST,iBAFJ;AAGLU,UAAMV,gBAAgB,MAAhB,CAHD;AAILW,UAAMX,gBAAgB,MAAhB,EAAwB,EAAEY,gBAAgB,IAAlB,EAAxB,CAJD;AAKLC,UAAMb,gBAAgB,MAAhB,CALD;AAMLc,YAAQd,gBAAgB,QAAhB,CANH;AAOLe,UAAMf,gBAAgB,QAAhB;AAPD,GAAP;AASD,CA7CD;;AA+CA;AACAjB,QAAQiC,YAAR,GAAuB,UAAUrB,OAAV,EAAmB;AACxC,MAAIsB,SAAS,EAAb;AACA,MAAIf,UAAUnB,QAAQW,UAAR,CAAmBC,OAAnB,CAAd;AACA,OAAK,IAAIuB,SAAT,IAAsBhB,OAAtB,EAA+B;AAC7B,QAAIL,SAASK,QAAQgB,SAAR,CAAb;AACAD,WAAOd,IAAP,CAAY;AACVgB,YAAM,IAAIC,MAAJ,CAAW,QAAQF,SAAR,GAAoB,GAA/B,CADI;AAEVb,WAAKR;AAFK,KAAZ;AAID;AACD,SAAOoB,MAAP;AACD,CAXD","file":"utils.js","sourcesContent":["var path = require('path')\nvar config = require('../config')\nvar ExtractTextPlugin = require('extract-text-webpack-plugin')\n\nexports.assetsPath = function (_path) {\n  var assetsSubDirectory = process.env.NODE_ENV === 'production'\n    ? config.build.assetsSubDirectory\n    : config.dev.assetsSubDirectory\n  return path.posix.join(assetsSubDirectory, _path)\n}\n\nexports.cssLoaders = function (options) {\n  options = options || {}\n\n  var cssLoader = {\n    loader: 'css-loader',\n    options: {\n      minimize: process.env.NODE_ENV === 'production',\n      sourceMap: options.sourceMap\n    }\n  }\n\n  // generate loader string to be used with extract text plugin\n  function generateLoaders (loader, loaderOptions) {\n    var loaders = [cssLoader]\n    if (loader) {\n      loaders.push({\n        loader: loader + '-loader',\n        options: Object.assign({}, loaderOptions, {\n          sourceMap: options.sourceMap\n        })\n      })\n    }\n\n    // Extract CSS when that option is specified\n    // (which is the case during production build)\n    if (options.extract) {\n      return ExtractTextPlugin.extract({\n        use: loaders,\n        fallback: 'vue-style-loader'\n      })\n    } else {\n      return ['vue-style-loader'].concat(loaders)\n    }\n  }\n\n  // https://vue-loader.vuejs.org/en/configurations/extract-css.html\n  return {\n    css: generateLoaders(),\n    postcss: generateLoaders(),\n    less: generateLoaders('less'),\n    sass: generateLoaders('sass', { indentedSyntax: true }),\n    scss: generateLoaders('sass'),\n    stylus: generateLoaders('stylus'),\n    styl: generateLoaders('stylus')\n  }\n}\n\n// Generate loaders for standalone style files (outside of .vue)\nexports.styleLoaders = function (options) {\n  var output = []\n  var loaders = exports.cssLoaders(options)\n  for (var extension in loaders) {\n    var loader = loaders[extension]\n    output.push({\n      test: new RegExp('\\\\.' + extension + '$'),\n      use: loader\n    })\n  }\n  return output\n}\n"]}